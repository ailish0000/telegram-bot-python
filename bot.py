# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ –º–æ–¥—É–ª–∏ –∏–∑ aiogram
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import os
from dotenv import load_dotenv  # –î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ .env

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))  # –í–∞–∂–Ω–æ: –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º

# –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

# –§—É–Ω–∫—Ü–∏—è, —Å–æ–∑–¥–∞—é—â–∞—è –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (inline-–∫–Ω–æ–ø–∫–∏)
def main_menu():
    markup = InlineKeyboardMarkup(row_width=1)  # 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
    markup.add(
        InlineKeyboardButton("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è üíö", url="https://aur-ora.com/auth/registration/666282189484"),
        InlineKeyboardButton("1Ô∏è‚É£ –ü–æ–¥–±–æ—Ä–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤", callback_data="select_product"),
        InlineKeyboardButton("2Ô∏è‚É£ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data="ask_question"),
        InlineKeyboardButton("3Ô∏è‚É£ –ö–∞—Ç–∞–ª–æ–≥ –≤—Å–µ—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤", callback_data="adres_magazines"),
        InlineKeyboardButton("4Ô∏è‚É£ –ê–¥—Ä–µ—Å–∞ –º–∞–≥–∞–∑–∏–Ω–æ–≤", callback_data="adres_magazines"),
        InlineKeyboardButton("–°–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ ‚ùå", callback_data="report_error")
    )
    return markup

# –§—É–Ω–∫—Ü–∏—è, —Å–æ–∑–¥–∞—é—â–∞—è –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–¥—É–∫—Ç–∞
def product_menu():
    markup = InlineKeyboardMarkup(row_width=2)
    markup.add(
        InlineKeyboardButton("–î–ª—è –≤–æ–ª–æ—Å", callback_data="hair"),
        InlineKeyboardButton("–î–ª—è —Å—É—Å—Ç–∞–≤–æ–≤", callback_data="joints"),
        InlineKeyboardButton("–î–ª—è –ø–µ—á–µ–Ω–∏", callback_data="liver"),
        InlineKeyboardButton("–í–∏—Ç–∞–º–∏–Ω—ã", callback_data="vitamins"),        
        InlineKeyboardButton("–°–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ", callback_data="report_error")
    )
    return markup

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –∏ /menu
@dp.message_handler(commands=["start", "menu"])
async def send_welcome(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±–µ –ø–æ–¥—Ö–æ–¥–∏—Ç üëá", reply_markup=main_menu())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /registration
@dp.message_handler(commands=["registration"])
async def send_registration_link(message: types.Message):
    await message.answer("–°—Å—ã–ª–∫–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: https://aur-ora.com/auth/registration/666282189484")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /catalog
@dp.message_handler(commands=["catalog"])
async def send_catalog_link(message: types.Message):
    await message.answer("–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ç–∞–ª–æ–≥: https://aur-ora.com/catalog/vse_produkty/")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏
@dp.callback_query_handler(lambda c: True)
async def handle_callback(callback_query: types.CallbackQuery):
    data = callback_query.data  # –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ callback_data
    user_id = callback_query.from_user.id

    # –í–µ—Ç–≤–∏–º –ª–æ–≥–∏–∫—É –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É callback_data
    if data == "check_address":
        await bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≥–æ—Ä–æ–¥:")

    elif data == "select_product":
        await bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–æ–¥—É–∫—Ç–∞:", reply_markup=product_menu())

    elif data == "ask_question":
        await bot.send_message(user_id, "‚úâÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –≤ —á–∞—Ç, –∏ —è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—á—É.")

    elif data == "adres_magazines":
        await bot.send_message(user_id, "‚úâÔ∏è –í–´–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥.")
    
    def select_city():
    markup = InlineKeyboardMarkup(row_width=2)
    markup.add(
        InlineKeyboardButton("–ú–∏–Ω—Å–∫", callback_data="Minsk"),
        InlineKeyboardButton("–ì–æ–º–µ–ª—å", callback_data="Gomel"),
        InlineKeyboardButton("–ë—Ä–µ—Å—Ç", callback_data="Brest"),
        InlineKeyboardButton("–í–∏—Ç–µ—Å–∫", callback_data="Vitebsk"),        
        InlineKeyboardButton("–ú–æ–≥–∏–ª–µ–≤", callback_data="Mogelev")  

        elif data == "Minsk":
        await bot.send_message(user_id, "–ê–¥—Ä–µ—Å
–ö–∞–ª–∏–Ω–∏–Ω–µ—Ü, –ù–∞—Ä–æ-–§–æ–º–∏–Ω—Å–∫–∏–π —Ä-–æ–Ω, –ú–æ—Å–∫–æ–≤—Å–∫—è –æ–±–ª., –†–æ—Å—Å–∏—è
–¢–µ–ª–µ—Ñ–æ–Ω
+7 915 063 3557
–ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä—ã
telegram@Elena_Mikylina
whatsapp+7 915 063 3557")

    elif data == "report_error":
        await bot.send_message(user_id, "‚ö†Ô∏è –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± –æ—à–∏–±–∫–µ, —á—Ç–æ–±—ã —è –º–æ–≥–ª–∞ –µ—ë –∏—Å–ø—Ä–∞–≤–∏—Ç—å.")

    elif data in ["hair", "joints", "liver", "vitamins"]:
        await bot.send_message(user_id, f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: {data}")

    # –û—Ç–≤–µ—á–∞–µ–º Telegram, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "–∫—Ä—É—Ç–∏–ª–∫—É" –Ω–∞ –∫–Ω–æ–ø–∫–µ
    await bot.answer_callback_query(callback_query.id)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–Ω–µ –∫–æ–º–∞–Ω–¥)
@dp.message_handler(lambda message: message.text and not message.text.startswith("/"))
async def forward_user_message(message: types.Message):
    # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    await bot.send_message(
        ADMIN_ID,
        f"üì© –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{message.from_user.username or '–±–µ–∑ username'} (ID: {message.from_user.id}):\n\n{message.text}"
    )
    # –û—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
    await message.reply("‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.")

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)


